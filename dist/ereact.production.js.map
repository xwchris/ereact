{"version":3,"sources":["webpack://EReact/webpack/universalModuleDefinition","webpack://EReact/webpack/bootstrap","webpack://EReact/./src/constants.js","webpack://EReact/./src/utils.js","webpack://EReact/./src/component.js","webpack://EReact/./src/render.js","webpack://EReact/./src/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","INTERNAL_NODE","isArray","array","Array","toString","defer","func","Promise","resolve","then","setTimeout","willRenderQueue","Component","props","context","this","_dirty","_renderCallbacks","assign","setState","state","callback","prevState","push","oldNode","dom","element","parentDom","parentNode","updateComponent","forceUpdate","render","renderMode","isReceiveProps","instance","setComponentProps","prevProps","prevContext","skipRender","shouldComponentUpdate","componentWillUpdate","getChildContext","childElement","oldChildNode","childNode","reconcile","map","componentDidUpdate","length","pop","_willRenderQueue$pop","nextInstance","nextParentDom","nextOldNode","nextElement","nextContext","createComponent","Constructor","constructor","isUpdate","componentWillReceiveProps","componentWillMount","renderComponent","createNode","componentDidMount","createTextElement","text","type","nodeValue","isTextElement","buildComponent","document","createTextNode","createElement","childNodes","reconcileChildren","updateProperties","forEach","appendChild","node","flatten","reduce","flat","toFlatten","concat","removeChild","children","componentWillUnmount","replaceChild","oldChildNodes","filter","childElements","Math","max","oldProps","setAccessor","undefined","console","error","_typeof","style","innerHTML","__html","startsWith","useCapture","endsWith","eventType","toLowerCase","substring","addEventListener","eventProxy","removeEventListener","_listener","setAttribute","e","__webpack_exports__","initProps","_ref","_len","arguments","args","_key","apply","child","containerDom"],"mappings":"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","file":"ereact.production.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"EReact\"] = factory();\n\telse\n\t\troot[\"EReact\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/static\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","'use strict';\n\nconst TEXT_ELEMENT = `@ereact/__text_element__`;\n\nconst INTERNAL_NODE = '@ereact/__internal_node';\n\nconst ATTR_KEY = '@ereact/__attr_key__';\n\n// Render mode constants\nconst SYNC_RENDER = '@ereact/render_sync';\nconst ASYNC_RENDER = '@ereact/render_async';\nconst FORCE_RENDER = '@ereact/force_update';\n\nexport { ATTR_KEY, TEXT_ELEMENT, SYNC_RENDER, ASYNC_RENDER, FORCE_RENDER, INTERNAL_NODE };\n","export const isArray = array => typeof Array.isArray === 'function' ? Array.isArray(array) : Object.prototype.toString.call(array) === '[object Array]';\n\nexport const defer = func => typeof Promise === 'function' ? Promise.resolve().then(func) : setTimeout(func);\n\nexport const flatten = array => array.reduce((flat, toFlatten) => flat.concat(isArray(toFlatten) ? flatten(toFlatten) : toFlatten), []);\n","import { INTERNAL_NODE, FORCE_RENDER, ASYNC_RENDER, SYNC_RENDER } from './constants';\nimport { reconcile, createNode } from './render';\nimport { isArray, defer } from './utils';\n\nconst willRenderQueue = [];\n\nfunction Component (props, context) {\n  this._dirty = false;\n\n  this.props = props || {};\n  this.context = context || {};\n\n  this._renderCallbacks = []\n}\n\nObject.assign(Component.prototype, {\n  setState(state, callback) {\n    if (!this.prevState) {\n      this.prevState = this.state;\n    }\n    this.state = Object.assign({}, this.state, state);\n    if (typeof callback === 'function') {\n      this._renderCallbacks.push(callback);\n    }\n\n    const oldNode = this[INTERNAL_NODE];\n    const { dom, element } = oldNode;\n    const parentDom = isArray(dom) ? dom[0].parentNode : dom.parentNode;\n\n    updateComponent(ASYNC_RENDER, parentDom, oldNode, element, this.context);\n  },\n\n  forceUpdate(callback) {\n    if (typeof callback === 'function') {\n      this._renderCallbacks.push(callback);\n    }\n\n    const oldNode = this[INTERNAL_NODE];\n    const { dom, element } = oldNode;\n    const parentDom = isArray(dom) ? dom[0].parentNode : dom.parentNode;\n    updateComponent(FORCE_RENDER, parentDom, oldNode, element, this.context);\n  },\n\n  render() {}\n});\n\nconst buildComponent = (element, context) => {\n  const { type, props } = element;\n  let instance = null;\n\n  instance = createComponent(type, props, context);\n  setComponentProps(instance, props);\n\n  instance[INTERNAL_NODE] = instance[INTERNAL_NODE] || { element };\n  renderComponent(instance, context)\n\n  return instance[INTERNAL_NODE];\n}\n\nconst updateComponent = (renderMode, parentDom, oldNode, element, context, isReceiveProps) => {\n  const instance = oldNode.instance;\n  if (isReceiveProps) {\n    setComponentProps(instance, element.props);\n  }\n\n  const props = instance.props;\n  const state = instance.state;\n  const prevProps = instance.prevProps || props;\n  const prevState = instance.prevState || state;\n  const prevContext = instance.prevContext || context;\n  let skipRender = false;\n\n  if (renderMode === ASYNC_RENDER) {\n    if (!instance._dirty && willRenderQueue.push({ instance, parentDom, oldNode, element, context }) === 1) {\n      // only first time\n      instance._dirty = true;\n\n      defer(() => {\n        const {\n          instance: nextInstance,\n          parentDom: nextParentDom,\n          oldNode: nextOldNode,\n          element: nextElement,\n          context: nextContext,\n        } = willRenderQueue.pop();\n\n        if (nextInstance._dirty) {\n          instance._dirty = false;\n          updateComponent(SYNC_RENDER, nextParentDom, nextOldNode, nextElement, nextContext);\n        }\n      });\n    }\n    return;\n  }\n\n  instance.props = prevProps;\n  instance.state = prevState;\n  instance.context = prevContext;\n\n  if (renderMode !== FORCE_RENDER && typeof instance.shouldComponentUpdate === 'function' && instance.shouldComponentUpdate(props, state) === false) {\n    skipRender = true;\n  } else if (typeof instance.componentWillUpdate === 'function') {\n    instance.componentWillUpdate(props, state);\n  }\n\n  instance.props = props;\n  instance.state = state;\n  instance.context = context;\n\n  instance.prevProps = instance.prevState = instance.prevContext = null;\n\n  if (!skipRender) {\n\n    if (typeof instance.getChildContext === 'function') {\n      context = Object.assign({}, context, instance.getChildContext());\n    }\n\n    const childElement = instance.render();\n    const oldChildNode = oldNode.childNode;\n\n    const childNode = reconcile(parentDom, oldChildNode, childElement, context);\n\n    const dom = isArray(childNode) ? childNode.map(n => n.dom) : childNode.dom;\n\n    Object.assign(oldNode, { dom, childNode, element });\n\n    if (typeof instance.componentDidUpdate === 'function') {\n      defer(() => instance.componentDidUpdate(prevProps, prevState));\n    }\n\n    while (instance._renderCallbacks.length) {\n      instance._renderCallbacks.pop().call(instance);\n    }\n  }\n\n  return oldNode;\n}\n\nconst createComponent = (Constructor, props, context) => {\n  let instance;\n  if (!(Constructor.prototype && Constructor.prototype.render)) {\n    const render = () => Constructor(props);\n    instance = new Component(props, context);\n    instance.render = render;\n  } else {\n    instance = new Constructor(props, context);\n    Component.call(instance, props, context);\n  }\n\n  instance.constructor = Constructor;\n  return instance;\n}\n\nconst setComponentProps = (instance, props) => {\n  const isUpdate = !!instance[INTERNAL_NODE];\n  if (isUpdate && typeof instance.componentWillReceiveProps === 'function') {\n    instance.componentWillReceiveProps(props);\n  } else if (!isUpdate && typeof instance.componentWillMount === 'function'){\n    instance.componentWillMount();\n  }\n\n  if (!instance.prevProps) instance.prevProps = instance.props;\n  if (!instance.prevContext) instance.prevContext = instance.context;\n\n  instance.props = props;\n}\n\nconst renderComponent = (instance, context) => {\n  instance.prevProps = instance.prevState = instance.prevContext = null;\n\n  if (typeof instance.getChildContext === 'function') {\n    context = Object.assign({}, context, instance.getChildContext());\n  }\n\n  const childElement = instance.render();\n\n  let childNode = null;\n  let dom = null;\n  if (isArray(childElement)) {\n    childNode = childElement.map(element => createNode(element, context))\n    dom = childNode.map(n => n.dom);\n  } else {\n    childNode = createNode(childElement, context);\n    dom = childNode.dom;\n  }\n  Object.assign(instance[INTERNAL_NODE], { dom, childNode, instance });\n\n  if (typeof instance.componentDidMount === 'function') {\n    defer(() => (instance.componentDidMount()));\n  }\n\n  while (instance._renderCallbacks.length) {\n    instance._renderCallbacks.pop().call(instance);\n  }\n}\n\nexport { Component, buildComponent, updateComponent };\n","import { TEXT_ELEMENT, SYNC_RENDER } from './constants';\nimport { buildComponent, updateComponent } from './component';\nimport { isArray, flatten } from './utils';\n\n// render\nconst render = (element, containerDom) => {\n  reconcile(containerDom, null, element, {});\n}\n\n// createElement\nconst createElement = (type, initProps, ...args) => {\n  const props = Object.assign({}, initProps);\n  const rawChildren = [].concat(...args);\n  const children = rawChildren\n    .filter(child => child != null && typeof child !== 'boolean')\n    .map(child => child instanceof Object ? child : createTextElement(child));\n\n  props.children = children;\n  return { type, props, children };\n}\n\nconst createTextElement = text => {\n  return {\n    type: TEXT_ELEMENT,\n    props: { nodeValue: text },\n  }\n}\n\nconst createNode = (element, context) => {\n  const { type, props } = element;\n  const isTextElement = type === TEXT_ELEMENT;\n  const isComponent = typeof type === 'function';\n\n  if (isComponent) {\n    return buildComponent(element, context);\n  }\n\n  const dom = isTextElement ? document.createTextNode('') : document.createElement(type);\n  const childNodes = reconcileChildren({ dom }, element, context);\n  updateProperties(dom, {}, props);\n\n  return { dom, element, childNodes };\n}\n\nconst reconcile = (parentDom, oldNode, element, context) => {\n  if (oldNode == null) {\n    if (isArray(element)) {\n      const node = element.map(createNode);\n      node.forEach(n => {\n        parentDom.appendChild(n.dom);\n      })\n    }\n\n    const node = createNode(element, context);\n\n    if (isArray(node.dom)) {\n      const doms = flatten(node.dom);\n      doms.forEach(dom => parentDom.appendChild(dom));\n    } else if (node.dom) {\n      parentDom.appendChild(node.dom);\n    }\n    return node;\n  } else if (element == null) {\n    if (isArray(oldNode)) {\n      oldNode.forEach(n => {\n        parentDom.removeChild(n.dom);\n      })\n    } else if (oldNode.dom) {\n      parentDom.removeChild(oldNode.dom);\n    }\n    return null;\n  } else if (isArray(oldNode) && isArray(element)) {\n    return reconcileChildren({ dom: parentDom, childNodes: oldNode }, { props: { children: element } }, context);\n  } else if ((oldNode.element || {}).type !== element.type) {\n    const node = createNode(element, context);\n\n    if (oldNode.element && typeof oldNode.element.type === 'function' && typeof oldNode.instance.componentWillUnmount === 'function') {\n      oldNode.instance.componentWillUnmount();\n    }\n\n    if (oldNode.dom || oldNode[0].dom) {\n      parentDom.replaceChild(node.dom, oldNode.dom || oldNode[0].dom);\n    }\n    return node;\n  } else if (typeof element.type === 'string') {\n    oldNode.childNodes = reconcileChildren(oldNode, element, context);\n    updateProperties(oldNode.dom, oldNode.element.props, element.props);\n    oldNode.element = element;\n    return oldNode;\n  } else {\n    return updateComponent(SYNC_RENDER, parentDom, oldNode, element, context, true);\n  }\n}\n\nconst reconcileChildren = (oldNode, element, context) => {\n  const oldChildNodes = (oldNode.childNodes || []).filter(node => node != null);\n  const childElements = (element.props.children || []).filter(node => node != null);\n  const childNodes = [];\n  const length = Math.max(oldChildNodes.length, childElements.length);\n  for (let i = 0; i < length; i++) {\n    const childNode = reconcile(oldNode.dom, oldChildNodes[i], childElements[i], context);\n    childNodes.push(childNode);\n  }\n  return childNodes;\n}\n\nconst updateProperties = (dom, oldProps, props) => {\n  for (name in oldProps) {\n    if (props[name] == null) {\n      setAccessor(dom, name, undefined);\n    }\n  }\n\n  for (name in props) {\n    // fix: name === 'value' || name === 'checked' ? dom[name] : oldProps[name]\n    if (props[name] !== oldProps[name]) {\n      setAccessor(dom, name, props[name]);\n    }\n  }\n}\n\nconst setAccessor = (dom, name, value) => {\n  // className htmlFor\n  if (name === 'className') {\n    name = 'class';\n  }\n\n  if (name === 'htmlFor') {\n    name = 'for';\n  }\n\n  if (name === 'key' || name === 'children' || name === 'innerHTML') {\n    // ignore\n  } else if (name === 'nodeValue') {\n    dom.nodeValue = value;\n  } else if (name === 'ref' && value != null) {\n    if (typeof value === 'function') {\n      value(dom);\n    } else {\n      console.error('ref should be an function');\n    }\n  } else if (name === 'style') {\n    if (typeof value === 'object') {\n      for (let i in value) {\n        dom.style[i] = typeof value[i] === 'number' ? `${value[i]}px` : value[i];\n      }\n    }\n\n    if (typeof value === 'string' || value == null) {\n      dom.style = value;\n    }\n  } else if (name === 'dangerouslySetInnerHTML') {\n    if (typeof value === 'object') {\n      dom.innerHTML = value.__html;\n    }\n  } else if (name.startsWith('on')) {\n    const useCapture = name.endsWith('Capture');\n    const eventType = name.toLowerCase().substring(2);\n    if (value) {\n      dom.addEventListener(eventType, eventProxy, useCapture);\n    } else {\n      dom.removeEventListener(eventType, eventProxy, useCapture);\n    }\n    (dom._listener || (dom._listener = {}))[eventType] = value;\n  } else {\n    dom.setAttribute(name, value);\n  }\n}\n\nfunction eventProxy(e) {\n  return this._listener[e.type](e);\n}\n\nexport { createElement, render, reconcile, createNode, reconcileChildren };\n","import { render, createElement } from './render';\nimport { Component } from './component';\n\nexport default { createElement, render, Component };\n"],"sourceRoot":""}